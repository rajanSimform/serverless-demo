{
  "service": {
    "service": "serverless-demo",
    "serviceObject": {
      "name": "serverless-demo"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "stage": "development",
      "environment": {
        "SNS_TOPIC_ARN": {
          "Ref": "NotificationTopic"
        },
        "SQS_QUEUE_URL": {
          "Ref": "DemoQueue"
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "sqs:ReceiveMessage",
            "sqs:DeleteMessage",
            "sqs:GetQueueAttributes"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "DemoQueue",
                "Arn"
              ]
            }
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "sns:Publish"
          ],
          "Resource": [
            {
              "Ref": "NotificationTopic"
            }
          ]
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ApiTriggerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-demo-development-apiTrigger"
            }
          },
          "SqsConsumerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-demo-development-sqsConsumer"
            }
          },
          "SnsPublisherLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-demo-development-snsPublisher"
            }
          },
          "ScheduledFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-demo-development-scheduledFunction"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-demo",
                        "development",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-demo-development*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-demo-development*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "DemoQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-demo",
                    "development",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ApiTriggerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-06baba88-0c99",
                "S3Key": "serverless/serverless-demo/development/1743314651398-2025-03-30T06:04:11.398Z/serverless-demo.zip"
              },
              "Handler": "handlers/apiTrigger.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-demo-development-apiTrigger",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SNS_TOPIC_ARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SNS_TOPIC_ARN\"]"
                  },
                  "SQS_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiTriggerLogGroup"
            ]
          },
          "SqsConsumerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-06baba88-0c99",
                "S3Key": "serverless/serverless-demo/development/1743314651398-2025-03-30T06:04:11.398Z/serverless-demo.zip"
              },
              "Handler": "handlers/sqsConsumer.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-demo-development-sqsConsumer",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SNS_TOPIC_ARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SNS_TOPIC_ARN\"]"
                  },
                  "SQS_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SqsConsumerLogGroup"
            ]
          },
          "SnsPublisherLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-06baba88-0c99",
                "S3Key": "serverless/serverless-demo/development/1743314651398-2025-03-30T06:04:11.398Z/serverless-demo.zip"
              },
              "Handler": "handlers/snsPublisher.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-demo-development-snsPublisher",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SNS_TOPIC_ARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SNS_TOPIC_ARN\"]"
                  },
                  "SQS_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SnsPublisherLogGroup"
            ]
          },
          "ScheduledFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-06baba88-0c99",
                "S3Key": "serverless/serverless-demo/development/1743314651398-2025-03-30T06:04:11.398Z/serverless-demo.zip"
              },
              "Handler": "handlers/scheduledFunction.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-demo-development-scheduledFunction",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SNS_TOPIC_ARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SNS_TOPIC_ARN\"]"
                  },
                  "SQS_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ScheduledFunctionLogGroup"
            ]
          },
          "ApiTriggerLambdaVersionn07nVE16tgeighSxNG8jR9aoD33RxFVGihaPth2gYNs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiTriggerLambdaFunction"
              },
              "CodeSha256": "GHgn+P3Wo7bhjyROakGuXJ6+mdp4S+q42jwB0bHafCc="
            }
          },
          "SqsConsumerLambdaVersionpie3hxSyoCec79lwYimLbP6ljtvvOU2Pr0Ulu9AuKQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SqsConsumerLambdaFunction"
              },
              "CodeSha256": "GHgn+P3Wo7bhjyROakGuXJ6+mdp4S+q42jwB0bHafCc="
            }
          },
          "SnsPublisherLambdaVersion1RRpJwV1KYE6MSwQ7jsOYZ1QnrS2EOCIQDT4VBV3w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SnsPublisherLambdaFunction"
              },
              "CodeSha256": "GHgn+P3Wo7bhjyROakGuXJ6+mdp4S+q42jwB0bHafCc="
            }
          },
          "ScheduledFunctionLambdaVersionJx7659PCEMZgjigEscCIB6UDgxna2YitawgWyBa26XE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ScheduledFunctionLambdaFunction"
              },
              "CodeSha256": "GHgn+P3Wo7bhjyROakGuXJ6+mdp4S+q42jwB0bHafCc="
            }
          },
          "ScheduledFunctionEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(10 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "ScheduledFunctionLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "scheduledFunctionSchedule"
                }
              ]
            }
          },
          "ScheduledFunctionLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ScheduledFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "ScheduledFunctionEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "development-serverless-demo",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceApiDashtrigger": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "api-trigger",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePublishDashsns": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "publish-sns",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodApiDashtriggerGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiDashtrigger"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiTriggerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ApiTriggerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPublishDashsnsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePublishDashsns"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SnsPublisherLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SnsPublisherLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1743314609159": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "development"
            },
            "DependsOn": [
              "ApiGatewayMethodApiDashtriggerGet",
              "ApiGatewayMethodPublishDashsnsPost"
            ]
          },
          "ApiTriggerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiTriggerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SnsPublisherLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SnsPublisherLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SqsConsumerEventSourceMappingSQSDemoQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "DemoQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "SqsConsumerLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "DemoQueue": {
            "Type": "AWS::SQS::Queue"
          },
          "NotificationTopic": {
            "Type": "AWS::SNS::Topic"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-06baba88-0c99",
            "Export": {
              "Name": "sls-serverless-demo-development-ServerlessDeploymentBucketName"
            }
          },
          "ApiTriggerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiTriggerLambdaVersionn07nVE16tgeighSxNG8jR9aoD33RxFVGihaPth2gYNs"
            },
            "Export": {
              "Name": "sls-serverless-demo-development-ApiTriggerLambdaFunctionQualifiedArn"
            }
          },
          "SqsConsumerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SqsConsumerLambdaVersionpie3hxSyoCec79lwYimLbP6ljtvvOU2Pr0Ulu9AuKQ"
            },
            "Export": {
              "Name": "sls-serverless-demo-development-SqsConsumerLambdaFunctionQualifiedArn"
            }
          },
          "SnsPublisherLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SnsPublisherLambdaVersion1RRpJwV1KYE6MSwQ7jsOYZ1QnrS2EOCIQDT4VBV3w"
            },
            "Export": {
              "Name": "sls-serverless-demo-development-SnsPublisherLambdaFunctionQualifiedArn"
            }
          },
          "ScheduledFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ScheduledFunctionLambdaVersionJx7659PCEMZgjigEscCIB6UDgxna2YitawgWyBa26XE"
            },
            "Export": {
              "Name": "sls-serverless-demo-development-ScheduledFunctionLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/development"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-demo-development-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "apiTrigger": {
        "handler": "handlers/apiTrigger.handler",
        "events": [
          {
            "http": {
              "path": "api-trigger",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-demo-development-apiTrigger",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ApiTriggerLambdaVersionn07nVE16tgeighSxNG8jR9aoD33RxFVGihaPth2gYNs"
      },
      "sqsConsumer": {
        "handler": "handlers/sqsConsumer.handler",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][4][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "serverless-demo-development-sqsConsumer",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SqsConsumerLambdaVersionpie3hxSyoCec79lwYimLbP6ljtvvOU2Pr0Ulu9AuKQ"
      },
      "snsPublisher": {
        "handler": "handlers/snsPublisher.handler",
        "events": [
          {
            "http": {
              "path": "publish-sns",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-demo-development-snsPublisher",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SnsPublisherLambdaVersion1RRpJwV1KYE6MSwQ7jsOYZ1QnrS2EOCIQDT4VBV3w"
      },
      "scheduledFunction": {
        "handler": "handlers/scheduledFunction.handler",
        "events": [
          {
            "schedule": "rate(10 minutes)"
          }
        ],
        "name": "serverless-demo-development-scheduledFunction",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ScheduledFunctionLambdaVersionJx7659PCEMZgjigEscCIB6UDgxna2YitawgWyBa26XE"
      }
    },
    "resources": {
      "Resources": {
        "DemoQueue": {
          "Type": "AWS::SQS::Queue"
        },
        "NotificationTopic": {
          "Type": "AWS::SNS::Topic"
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "serverless-demo",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {},
    "artifact": "/home/rajan/Desktop/SAM/demo/.serverless/serverless-demo.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-demo/development/1743314651398-2025-03-30T06:04:11.398Z",
    "artifact": "serverless-demo.zip"
  }
}